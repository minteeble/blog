/**
 * Server Side Rendering
 */
import { APIGatewayEvent } from "aws-lambda";
import * as React from "react";
import { renderToString } from "react-dom/server";

import App from "../App";
import ConfigContext from "../components/ConfigContext";
import config from "./config";
import html from "./html";
import { MetaInfo, Stats } from "./types";
//@ts-ignore
import { StaticRouter } from "react-router-dom/server";
import { ServerUtils } from "./ServerUtils";

/**
 * Server-side rendering
 */
export default async function render(_event: APIGatewayEvent): Promise<string> {
  // console.log("Event", _event);

  let isValid = ServerUtils.isPathValid(_event.path);

  let defaultMeta: MetaInfo = {
    title: "Minteeble",
    description: "Default description",
    image: "#",
  };

  let meta: MetaInfo = defaultMeta;

  if (isValid) {
    meta = {
      title: "Custom title",
      description: "Custom description",
      image: "##",
    };
  }

  // The stats are generated by the Webpack Stats Plugin (`webpack-stats-plugin`)
  const stats = (await import("../../dist/stats.json")) as unknown as Stats;
  const content = renderToString(
    <StaticRouter location={"/"}>
      <ConfigContext.Provider value={config}>
        <App />
      </ConfigContext.Provider>
    </StaticRouter>,
  );
  return html({ meta, stats, content, config });
}
